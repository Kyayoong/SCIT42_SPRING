package net.softsociety.spring2.controller;

import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestParam;

import net.softsociety.spring2.vo.PersonVO;

@Controller
public class paramController {
	@GetMapping({"param/param1"})
	public String param1() {
		//forwarding - 요청받고 이동하는 것
		return "param1";
	}
	
	//param1.html에서 전달되는 parameter 받기.
	@GetMapping("param/input1")
	public String input1(String name, String service, String phone){
		//잘 전달되었는지 java console창에 확인하는 용도의 sysout.
		System.out.println("전달된 이름:" + name);
		System.out.println("전달된 통신사:" + service);
		System.out.println("전달된 번호:" + phone);
		
		//보여줄 곳은 없지만 무조건 return해야한다. ex) 가입되었습니다~~ 라는 화면 등등.
		//보여줄 곳이 따로 없으면 기존 페이지로 이동한다.
		return "redirect:/";
	}
	
	//param2.html이동(post)
	@GetMapping({"param/param2"})
	public String param2() {
		return "param2";
	}
	
	@PostMapping({"param/input2"})
	public String input2(String name, String service, String phone) {
		System.out.println("전달된 이름:" + name);
		System.out.println("전달된 통신사:" + service);
		System.out.println("전달된 번호:" + phone);
		
		return "redirect:/";
	}
	
	//param3.html로 이동
	@GetMapping({"param/param3"})
	public String param3() {
		return "param3";
	}
	
	//spring이 생성자를 통해 personvo를 생성 후 get, set을 이용하여 자동으로 넣어줌
	@GetMapping({"param/input3"})
	public String input3(PersonVO p) {
		System.out.println(p);
		return "redirect:/";
	}
	
	//폼 없이 주소로 바로 파라미터 보내기...get방식만 가능하다. 
	//받는 파라미터의 변수형에 따라 자동으로 변환하여 저장된다. ex) int age... 하지만 숫자가 아니면 오류.(int a = "";, 문자형)
	//때문에 모든 종류의 오류를 잡아줘야한다.
	@GetMapping({"param/param4"})
	public String param4(
			@RequestParam(name="", defaultValue="기본값") String name, 
			String age) {
		System.out.println("이름 : " + name + ", 나이 : " + age);
		return "redirect:/";
	}
}
